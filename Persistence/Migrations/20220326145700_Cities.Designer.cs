// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Configurations;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(PersistenceDbContext))]
    [Migration("20220326145700_Cities")]
    partial class Cities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Accommodation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Rooms")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Domain.Entities.Accommodation", b =>
                {
                    b.OwnsMany("Domain.Entities.Address", "Addresses", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<long>("AccommodationId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Complement")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("AccommodationId");

                            b1.ToTable("Address");

                            b1.WithOwner()
                                .HasForeignKey("AccommodationId");
                        });

                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Domain.Entities.City", b =>
                {
                    b.OwnsMany("Domain.Entities.CityAccommodation", "CityAccommodations", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<long>("AccommodationId")
                                .HasColumnType("bigint");

                            b1.Property<Guid>("CityId")
                                .HasColumnType("char(36)");

                            b1.HasKey("Id");

                            b1.HasIndex("AccommodationId");

                            b1.HasIndex("CityId");

                            b1.ToTable("CityAccommodation");

                            b1.HasOne("Domain.Entities.Accommodation", "Accommodation")
                                .WithMany()
                                .HasForeignKey("AccommodationId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner("City")
                                .HasForeignKey("CityId");

                            b1.Navigation("Accommodation");

                            b1.Navigation("City");
                        });

                    b.Navigation("CityAccommodations");
                });
#pragma warning restore 612, 618
        }
    }
}
